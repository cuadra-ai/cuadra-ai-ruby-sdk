# cuadra_ai
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CuadraAi
  # ModelsController
  class ModelsController < BaseController
    # This endpoint display all of our AI models.
    # @param [Integer] page Optional parameter: TODO: type description here
    # @param [Integer] size Optional parameter: TODO: type description here
    # @return [ApiResponse] Complete http response with raw body and status code.
    def get_models(page: nil,
                   size: nil)
      @api_call
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/model',
                                     Server::DEFAULT)
                   .query_param(new_parameter(page, key: 'page'))
                   .query_param(new_parameter(size, key: 'size'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PaginatedResponseExListModelEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end

    # This endpoint creates a new custom Model for you to train and use.
    # @param [ModelEx] body Required parameter: TODO: type description here
    # @return [ApiResponse] Complete http response with raw body and status code.
    def create_model(body)
      @api_call
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/model',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ModelEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end

    # This endpoint shows you information about a particular model given an id.
    # @param [String] id Required parameter: TODO: type description here
    # @return [ApiResponse] Complete http response with raw body and status code.
    def get_model(id)
      @api_call
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/model/{id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(id, key: 'id')
                                    .is_required(true)
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ModelEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end

    # This endpoint removes a custom model you created.
    # @param [String] id Required parameter: TODO: type description here
    # @return [ApiResponse] Complete http response with raw body and status code.
    def remove_model(id)
      @api_call
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/model/{id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(id, key: 'id')
                                    .is_required(true)
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ModelEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end

    # This endpoint updates a custom model you created.
    # @param [String] id Required parameter: TODO: type description here
    # @param [ModelEx] body Required parameter: TODO: type description here
    # @return [ApiResponse] Complete http response with raw body and status code.
    def update_model(id,
                     body)
      @api_call
        .request(new_request_builder(HttpMethodEnum::PATCH,
                                     '/model/{id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(id, key: 'id')
                                    .is_required(true)
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ModelEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end
  end
end
