# cuadra_ai
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CuadraAi
  # UsageController
  class UsageController < BaseController
    # This endpoint allows you to calculate the usage, so you get an idea of the
    # amount of tokens that will be consumed.
    # @param [Chat] body Required parameter: TODO: type description here
    # @return [ApiResponse] Complete http response with raw body and status code.
    def calculate_tokens(body)
      @api_call
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/usage/tokenize',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(UsageCalculationEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end

    # This endpoint calculates the amount of tokens used by the user in the
    # given month.
    # @return [ApiResponse] Complete http response with raw body and status code.
    def total_usage
      @api_call
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/usage/totals',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(TotalUsageEx.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Bad request, read again our documentation or contact support'\
                                  ' for guidance.',
                                 ErrorResponseException)
                    .local_error('401',
                                 'Not authorized, check our OAuth2 doc.',
                                 ErrorResponseException)
                    .local_error('500',
                                 'Internal error, if this error persist, please contact support'\
                                  '.',
                                 ErrorResponseException))
        .execute
    end
  end
end
