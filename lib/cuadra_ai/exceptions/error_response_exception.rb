# cuadra_ai
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CuadraAi
  # Standard error response format for Cuadra AI
  class ErrorResponseException < APIException
    SKIP = Object.new
    private_constant :SKIP

    # A message describing the error
    # @return [String]
    attr_accessor :message

    # HTTP status code
    # @return [Integer]
    attr_accessor :status

    # Optional: Field-specific validation errors
    # @return [Hash[String, String]]
    attr_accessor :field_errors

    # The constructor.
    # @param [String] reason The reason for raising an exception.
    # @param [HttpResponse] response The HttpReponse of the API call.
    def initialize(reason, response)
      super(reason, response)
      hash = APIHelper.json_deserialize(@response.raw_body)
      unbox(hash)
    end

    # Populates this object by extracting properties from a hash.
    # @param [Hash] hash The deserialized response sent by the server in the
    # response body.
    def unbox(hash)
      return nil unless hash

      @message = hash.key?('message') ? hash['message'] : SKIP
      @status = hash.key?('status') ? hash['status'] : SKIP
      @field_errors = hash.key?('field_errors') ? hash['field_errors'] : SKIP
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} message: #{@message}, status: #{@status}, field_errors: #{@field_errors}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} message: #{@message.inspect}, status: #{@status.inspect}, field_errors:"\
      " #{@field_errors.inspect}>"
    end
  end
end
