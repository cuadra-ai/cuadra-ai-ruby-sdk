# cuadra_ai
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CuadraAi
  # PaginatedResponseExListModelEx Model.
  class PaginatedResponseExListModelEx < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :page

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :size

    # TODO: Write general description for this method
    # @return [Array[ModelEx]]
    attr_accessor :data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['page'] = 'page'
      @_hash['size'] = 'size'
      @_hash['data'] = 'data'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        page
        size
        data
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(page: SKIP, size: SKIP, data: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @page = page unless page == SKIP
      @size = size unless size == SKIP
      @data = data unless data == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      page = hash.key?('page') ? hash['page'] : SKIP
      size = hash.key?('size') ? hash['size'] : SKIP
      # Parameter is an array, so we need to iterate through it
      data = nil
      unless hash['data'].nil?
        data = []
        hash['data'].each do |structure|
          data << (ModelEx.from_hash(structure) if structure)
        end
      end

      data = SKIP unless hash.key?('data')

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      PaginatedResponseExListModelEx.new(page: page,
                                         size: size,
                                         data: data,
                                         additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} page: #{@page}, size: #{@size}, data: #{@data}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} page: #{@page.inspect}, size: #{@size.inspect}, data: #{@data.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
